{
  "name": "My workflow_",
  "nodes": [
    {
      "parameters": {
        "path": "random-number",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        0,
        0
      ],
      "id": "49551c40-d4d7-493d-8667-c78e91c8c4ac",
      "name": "Webhook",
      "webhookId": "6082dc34-a5fb-4311-842c-7020c55ec84c"
    },
    {
      "parameters": {
        "jsCode": "const minRaw =  $json[\"query\"][\"min\"];\nconst maxRaw =  $json[\"query\"][\"max\"];\n\n// Verifica se os valores existem\nif (minRaw === undefined || maxRaw === undefined) {\n  throw new Error(\"Parâmetros 'min' e 'max' são obrigatórios.\");\n}\n\n// Verifica se são apenas numeros inteiros (sem letras, espaços, etc.)\nconst isNumeric = (value) => /^-?\\d+$/.test(value);\n\nif (!isNumeric(minRaw) || !isNumeric(maxRaw)) {\n  throw new Error(\"Dados inválidos. Somente números inteiros são permitidos.\");\n}\n\nconst min = parseInt(minRaw);\nconst max = parseInt(maxRaw);\n\n// Verifica se min é menor que max\nif (min >= max) {\n  throw new Error(\"'min' deve ser menor que 'max'.\");\n}\n\n// Gera número aleatório\nconst random = Math.floor(Math.random() * (max - min + 1)) + min;\n\nreturn {\n  json: {\n    numeroAleatorio: random\n  }\n};\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        208,
        0
      ],
      "id": "303bed73-5242-481f-acbe-cf45a2191da9",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        384,
        0
      ],
      "id": "10efdddf-c443-4c8a-ba98-97420f431ef0",
      "name": "Respond to Webhook"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "28d601a3-642b-4b99-bf7c-f7d05e7c11fa",
  "meta": {
    "instanceId": "7e986cd7443807e34a18cb75d6abdb6bee47f14576b4942ca62b8d682ba7c03d"
  },
  "id": "Ag70HiziRu8wCtsN",
  "tags": []
}
